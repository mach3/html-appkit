{
  "name": "head-require",
  "version": "0.0.0",
  "dependencies": {
    "headjs": "headjs/headjs"
  },
  "gitHead": "835e19288ce0603fa883bd303fe8f23ee11c79f1",
  "readme": "\n# HeadRequire.js version 1.0.0\n\n\n## これはなに\n\nhead.js のスクリプトローダーをrequire.js っぽく使うための拡張機能です。\n\n## どこらへんをrequire.jsっぽくしたのか\n\n- script要素のdata-*属性でmain.jsを指定できる\n- main.js では headRequire() でリソースをロード出来る\n- nodeベースの\"なんちゃって\"コンパイラが付属\n- ついでにgruntタスクを付けてみました\n\n## リソースローダー\n\n```html\n<script src=\"scripts/head.js\"></script>\n<script src=\"scripts/head-require.js\" data-main=\"scripts/main.js\"></script>\n```\n\nまず、head.jsを読み込んでからhead-require.jsを読み込みます。\nhead-require.js のscript要素に data-main 属性を指定しておくと、そのスクリプトを読みこんでくれます。\n\nmain.js の中身は、例えば次のようになります。\nリソースのパスは、main.jsからの相対パスとなります。\n\n```js\nheadRequire(\n\t\"the/path/to/foojs\",\n\t\"the/path/to/bar.js\",\n\t\"the/path/to/baz.js\"\n\t\"the/path/to/initialize.js\"\n);\n```\n\nrequire.jsの`require()`と違って、引数は配列ではありません。\nまた、最後の引数はコールバック関数ではありませんので、最後のソースに初期化の処理を書く必要があります。\n\nこれはコンパイラで手抜きをする為です。ごめんなさい。\n\n\n## ソースの結合\n\nnodeで動くコンパイラを用意しましたが、かなり適当な作りなのであまり期待してはいけません。\n\n```bash\n$ ./bin/hrc main.js\n```\n\nこれで、main.js 内でrequire()されているリソースが一塊になって文字列で通常出力されます。\n結合する際、区切り文字として \";\" が付加されます。\n\nまた、第二引数に出力先のファイルを指定できます。\n\n```bash\n$ ./bin/hrc main.js dest.js\n```\n\n## Gruntタスク\n\nソースを結合するgruntタスクを用意しました。\n下の例は、*dest.js*に*main.js*の結合結果を保存します。\n\n```javascript\nmodule.exports = function(grunt){\n\t\n\tgrunt.loadTasks(\"the/path/to/head-require/tasks\");\n\n\tgrunt.initConfig({\n\t\theadRequire : {\n\t\t\tdist : {\n\t\t\t\t\"the/path/to/dest.js\" : \"the/path/to/main.js\"\n\t\t\t}\n\t\t}\n\t});\n};\n```\n\n\n\n## おまけ機能 : appオブジェクト\n\nhead-require.js を読んでおくと、グローバル空間に `app` オブジェクトが生まれ、アクセスすることができます。\n例えば `app.path`は main.js が設置されているディレクトリへのパスを格納しています。\n\n```js\nvar myPath = app.path; // <= \"scripts/\"\n```\n\n### 値の保存・取得\n\n値を共有する機能をつけました。好きなように使ってください。\n\n```js\n// セッター\napp.set(\"foo\", \"bar\");\n\n// ゲッター\nconsole.log(app.get(\"foo\")); // <= \"bar\"\n```\n\n\n### 名前の変更\n\n尚、\"app\" という名前を変更したい場合は、script要素のdata-appname属性に指定すれば変更できます。\n\n```html\n<script src=\"scripts/head-require.js\" data-main=\"scripts/main.js\" data-appname=\"myapp\"></script>\n```\n\nそうすることで、\"app\" が \"myapp\" として宣言されます。\n\n```javascript\nvar myPath = myapp.path;\n```\n\n\n## 作者\n\nmach3\n\n- [Website](http://www.mach3.jp)\n- [Blog](http://blog.mach3.jp)\n- [Twitter](http://twitter.com/mach3ss)\n",
  "readmeFilename": "README.md",
  "_id": "head-require@1.0.0",
  "description": "",
  "commit": "835e19288ce0603fa883bd303fe8f23ee11c79f1",
  "repository": {
    "type": "git",
    "url": "git://github.com/mach3/head-require.git"
  }
}