{
  "name": "grunt-chain-shell",
  "version": "0.8.0",
  "description": "Grunt task to run shell script chainly",
  "main": "./tasks/grunt-chain-shell.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mach3/grunt-chain-shell"
  },
  "author": {
    "name": "mach3"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "\n# Grunt-Chain-Shell\n\nRun shell script chainly.\n\n## How to use\n\n### Basic\n\n```javascript\nloadNpmTasks(\"grunt-chain-shell\");\n\ngrunt.initConfig({\n\tchain : {\n\t\tdist : {\n\t\t\tcommands : [\n\t\t\t\t\"date >> date.txt\"\n\t\t\t]\n\t\t}\n\t}\n});\n```\n\n### Use variables\n\nYou can define variables in `options.vars`,\nand use it as `{{key}}` in commands.\n\n```\ngrunt.initConfig({\n\tchain : {\n\t\toptions : {\n\t\t\tvars : {\n\t\t\t\tdestfile : \"date.txt\"\n\t\t\t}\n\t\t},\n\t\tdist : {\n\t\t\tcommands : [\n\t\t\t\t\"date >> {{destfile}}\"\n\t\t\t]\n\t\t}\n\t}\n});\n```\n\n### Ignore errors\n\nWhen shell returns an error, process stops as default.\nTo ignore errors and continue to run the process, start the command with `-` like Makefile.\n\n```\ngrunt.initConfig({\n\tchain : {\n\t\tdist : {\n\t\t\tcommands : [\n\t\t\t\t\"-rm foo.txt\", // Even if this cause an error, continue to run.\n\t\t\t\t\"touch foo.txt\"\n\t\t\t]\n\t\t}\n\t}\n});\n```\n\n### Verbose \n\nif `options.verbose` is true, this print the log. (default is true)\n\n```\ngrunt.initConfig({\n\tchain : {\n\t\toptions : {\n\t\t\tverbose : false // any log message will not be printed.\n\t\t}\n\t}\n});\n```\n\n\n### Author\n\nmach3\n\n- [Website](http://www.mach3.jp)\n- [Blog](http://blog.mach3.jp)\n- [Twitter](http://twitter.com/mach3ss)\n",
  "bugs": {
    "url": "https://github.com/mach3/grunt-chain-shell/issues"
  },
  "_id": "grunt-chain-shell@0.8.0",
  "_from": "grunt-chain-shell@*"
}
